version: "3.9"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rfantibody-backend
    ports:
      - "2782:2782"
    environment:
      - ALLOW_ORIGINS=http://localhost:2239
      - JOBS_ROOT=/data/jobs
      - RFANTIBODY_IMAGE=rfantibody:latest
      - RF_WEIGHTS_HOST=${PWD}/third_party/RFantibody/weights
      - HOST_DATA_DIR=${PWD}/data
      - HOST_WEIGHTS_DIR=${PWD}/third_party/RFantibody/weights
      - HOST_CODE_DIR=${PWD}/third_party/RFantibody
    volumes:
      - ./backend:/app
      - ./data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    command: >
      sh -c "mkdir -p \"${JOBS_ROOT:-/data/jobs}\" &&
            uvicorn main:app --host 0.0.0.0 --port 2782 --reload"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rfantibody-frontend
    ports:
      - "2239:2239"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - VITE_API_BASE_URL=/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend

  rfantibody-worker:
    build:
      context: ./third_party/RFantibody
      dockerfile: Dockerfile
    image: rfantibody:latest
    container_name: rfantibody-worker
    environment:
      - SENTINEL=/home/.rf_setup_done
      - HYDRA_FULL_ERROR=1
      - PYTHONUNBUFFERED=1
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    volumes:
      - ./data:/data
      - ./third_party/RFantibody:/home
      - ./third_party/RFantibody/weights:/home/weights:ro
    tty: true
    stdin_open: true
    command:
      - /bin/bash
      - -lc
      - |
        set -Eeuo pipefail
        nvidia-smi || true
        ls -al /home/include || true
        if [[ ! -f "${SENTINEL}" ]]; then
          echo "[compose] running setup..."
          env SENTINEL="${SENTINEL}" bash /home/include/setup.sh
          echo "[compose] setup done."
        else
          echo "[compose] setup already done."
        fi
        echo "[compose] worker ready; sleeping..."
        sleep infinity
    healthcheck:
      test: ["CMD-SHELL", "[ -f /home/.rf_setup_done ]"]
      interval: 30s
      timeout: 5s
      retries: 10
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]